!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/robert/gh/lua/lamine/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	//
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
Author	README.md	/^## Author$/;"	s	chapter:Lamine
LICENSE	README.md	/^# LICENSE$/;"	c
Lamine	README.md	/^# Lamine$/;"	c
_feedkeys	lua/nvimapi.lua	/^local function _feedkeys(key, mode, escape)$/;"	f
_lines	lua/nvimapi.lua	/^local function _lines(data, fun)$/;"	f
abspath	lua/context.lua	/^local function abspath()$/;"	f
basename	lua/context.lua	/^local function basename()$/;"	f
buffer	lua/nvimapi.lua	/^  buffer = function() return api.nvim_buf_get_lines(0, 0, -1, false) end,$/;"	f
call_function	lua/nvimapi.lua	/^local function call_function(name, ...)$/;"	f
col	lua/context.lua	/^local function col()$/;"	f
command	lua/nvimapi.lua	/^  command = function(cmd) api.nvim_command(cmd) end,$/;"	f
current_char	lua/context.lua	/^local function current_char()$/;"	f
current_context	lua/context.lua	/^local function current_context()$/;"	f
current_line	lua/context.lua	/^local function current_line()$/;"	f
current_lnb	lua/context.lua	/^local function current_lnb()$/;"	f
cursor	lua/context.lua	/^local function cursor()$/;"	f
delete_lines	lua/nvimapi.lua	/^  delete_lines = function(f, l) api.nvim_buf_set_lines(0, f - 1, l, false, {}) end,$/;"	f
dirname	lua/context.lua	/^local function dirname()$/;"	f
enter_input_mode	lua/nvimapi.lua	/^function enter_input_mode(bef_after)$/;"	f
eval	lua/nvimapi.lua	/^  eval = function(str) return api.nvim_eval(str) end,$/;"	f
filetype	lua/context.lua	/^local function filetype()$/;"	f
get_col	lua/nvimapi.lua	/^  get_col = function() return get_cursor()[2] end,$/;"	f
get_current_line	lua/nvimapi.lua	/^local function get_current_line()$/;"	f
get_cursor	lua/nvimapi.lua	/^local function get_cursor()$/;"	f
get_mark	lua/nvimapi.lua	/^local function get_mark(mark)$/;"	f
get_reg	lua/nvimapi.lua	/^  get_reg  = function(reg) return api.nvim_eval('@' .. reg) end,$/;"	f
get_selected_lines	lua/nvimapi.lua	/^local function get_selected_lines()$/;"	f
get_selected_part	lua/nvimapi.lua	/^local function get_selected_part()$/;"	f
input_feedkeys	lua/nvimapi.lua	/^local function input_feedkeys(key, escape)$/;"	f
insert_lines_after	lua/nvimapi.lua	/^local function insert_lines_after(data, lnb)$/;"	f
insert_lines_before	lua/nvimapi.lua	/^local function insert_lines_before(data, lnb)$/;"	f
line_at	lua/context.lua	/^local function line_at(lnb)$/;"	f
line_at	lua/nvimapi.lua	/^  line_at = function(idx) return api.nvim_buf_get_lines(0, idx - 1, idx, false)[1] end,$/;"	f
line_count	lua/nvimapi.lua	/^  line_count = function() return api.nvim_buf_line_count(0) end,$/;"	f
lines	lua/context.lua	/^local function lines(f, l)$/;"	f
lines	lua/nvimapi.lua	/^function lines(f, l)$/;"	f
lnb	lua/nvimapi.lua	/^  lnb  = function() return api.nvim_call_function('line', {'.'}) end,$/;"	f
next_lines	lua/context.lua	/^local function next_lines(offset)$/;"	f
normal	lua/nvimapi.lua	/^  normal = function(normal_cmd) return api.nvim_command('normal ' .. normal_cmd) end,$/;"	f
normal_feedkeys	lua/nvimapi.lua	/^local function normal_feedkeys(key, escape)$/;"	f
normalise_cursor	lua/nvimapi.lua	/^local function normalise_cursor(lc, c)$/;"	f
option	lua/nvimapi.lua	/^  option = function(name) return api.nvim_buf_get_option(0, name) end,$/;"	f
p	lua/nvimapi.lua	/^  p = function(val) print(vim.inspect(val)) end,$/;"	f
post_line	lua/context.lua	/^local function post_line()$/;"	f
pre_line	lua/context.lua	/^local function pre_line()$/;"	f
prefix	lua/context.lua	/^local function prefix()$/;"	f
read_var	lua/nvimapi.lua	/^local function read_var(name, default)$/;"	f
relpath	lua/context.lua	/^local function relpath()$/;"	f
replace_in_lines	lua/nvimapi.lua	/^local function replace_in_lines(pattern, replacement, lnb1, lnb2)$/;"	f
result	lua/nvimapi.lua	/^  local result = map(input, function(line)$/;"	f
set_all_lines	lua/nvimapi.lua	/^  set_all_lines = function(data) api.nvim_buf_set_lines(0, 1, -1, false, data) end,$/;"	f
set_col	lua/nvimapi.lua	/^local function set_col(col, relative)$/;"	f
set_current_line	lua/context.lua	/^local function set_current_line(data, lnb)$/;"	f
set_current_line	lua/nvimapi.lua	/^local function set_current_line(data, lnb, fun)$/;"	f
set_cursor	lua/nvimapi.lua	/^  set_cursor = function(l, c) api.nvim_win_set_cursor(0, normalise_cursor(l, c)) end,$/;"	f
set_cursor_relative	lua/nvimapi.lua	/^local function set_cursor_relative(l, c)$/;"	f
set_lines	lua/context.lua	/^local function set_lines(f, l, data)$/;"	f
set_lines	lua/nvimapi.lua	/^  set_lines = function(f, l, data) api.nvim_buf_set_lines(0, f - 1, l, false, data) end,$/;"	f
set_selected_part	lua/nvimapi.lua	/^local function set_selected_part(new, sel)$/;"	f
set_var	lua/nvimapi.lua	/^  set_var = function(name, value) return api.nvim_set_var(name, value) end,$/;"	f
suffix	lua/context.lua	/^local function suffix()$/;"	f
system	lua/nvimapi.lua	/^  system = function(cmd) call_function("system", cmd) end,$/;"	f
test	Makefile	/^test:$/;"	t
var	lua/nvimapi.lua	/^  var = function(name) return api.nvim_get_var(name) end,$/;"	f
